"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[947],{9109:(a,n,t)=>{t.r(n),t.d(n,{comp:()=>o,data:()=>s});var r=t(362);const e={},o=(0,t(5726).A)(e,[["render",function(a,n){return(0,r.uX)(),(0,r.CE)("div",null,[...n[0]||(n[0]=[(0,r.Fv)('<h1 id="rag系统实战课01-提效利器-rag为传统mis系统大幅提效-门槛并不高" tabindex="-1"><a class="header-anchor" href="#rag系统实战课01-提效利器-rag为传统mis系统大幅提效-门槛并不高"><span>RAG系统实战课01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高</span></a></h1><blockquote><p>📖 <strong>文章来源</strong>: <a href="https://time.geekbang.org/column/article/806091" target="_blank" rel="noopener noreferrer">极客时间 - RAG系统实战课</a> 👨‍💻 <strong>作者</strong>: 叶伟民 📅 <strong>阅读时间</strong>: 2025-10-26</p></blockquote><h2 id="📋-文章概要" tabindex="-1"><a class="header-anchor" href="#📋-文章概要"><span>📋 文章概要</span></a></h2><p>本文介绍了RAG系统作为传统软件开发人员加入AI浪潮的最快路径，并重点讲解了通过RAG改造传统MIS系统可以大幅提升用户工作效率。文章以实际的ERP系统为例，展示了改造前后的对比，并提供了完整的环境搭建指南。</p><h2 id="🔍-核心观点" tabindex="-1"><a class="header-anchor" href="#🔍-核心观点"><span>🔍 核心观点</span></a></h2><h3 id="rag改造的三条路径对比" tabindex="-1"><a class="header-anchor" href="#rag改造的三条路径对比"><span>RAG改造的三条路径对比</span></a></h3><ul><li><strong>第一条</strong>：直接跳槽换RAG工作（成功率最小）</li><li><strong>第二条</strong>：在公司内开全新RAG项目（成功率较高，但有难度）</li><li><strong>第三条</strong>：<strong>改造所处项目（成功率最高，难度最小）</strong></li></ul><h3 id="改造收益的核心价值" tabindex="-1"><a class="header-anchor" href="#改造收益的核心价值"><span>改造收益的核心价值</span></a></h3><ul><li><strong>减少操作步骤</strong>：从3+N+1个步骤减少到1个步骤</li><li><strong>节省操作时间</strong>：N越多，节省时间越多</li><li><strong>提高工作效率</strong>：通过自然语言查询和录入大幅提升用户体验</li></ul><h3 id="改造策略" tabindex="-1"><a class="header-anchor" href="#改造策略"><span>改造策略</span></a></h3><ul><li><strong>保留传统界面</strong>：遇到RAG不能很好工作时，用户仍可通过传统界面完成任务</li><li><strong>渐进式改造</strong>：按照优先级或业务模块逐个进行RAG能力升级</li><li><strong>增加容错机制</strong>：提供灰度、abTest、回滚等功能保证系统平滑升级</li></ul><h2 id="🛠️-技术要点" tabindex="-1"><a class="header-anchor" href="#🛠️-技术要点"><span>🛠️ 技术要点</span></a></h2><h3 id="传统mis系统的操作流程" tabindex="-1"><a class="header-anchor" href="#传统mis系统的操作流程"><span>传统MIS系统的操作流程</span></a></h3><h4 id="查询数据-改造前" tabindex="-1"><a class="header-anchor" href="#查询数据-改造前"><span>查询数据（改造前）</span></a></h4><ol><li>找到数据查询界面入口（1个步骤）</li><li>打开数据查询界面（1个步骤）</li><li>输入N种查询条件（N个步骤）</li><li>点击&quot;查询&quot;按钮（1个步骤） <strong>总计：2+N+1个步骤</strong></li></ol><h4 id="录入数据-改造前" tabindex="-1"><a class="header-anchor" href="#录入数据-改造前"><span>录入数据（改造前）</span></a></h4><ol><li>找到数据管理界面入口（1个步骤）</li><li>打开数据管理界面（1个步骤）</li><li>点击&quot;新建&quot;按钮（1个步骤）</li><li>录入N个输入控件（N个步骤）</li><li>点击&quot;保存&quot;按钮（1个步骤） <strong>总计：3+N+1个步骤</strong></li></ol><h3 id="rag改造后的理想状态" tabindex="-1"><a class="header-anchor" href="#rag改造后的理想状态"><span>RAG改造后的理想状态</span></a></h3><ul><li><strong>查询数据</strong>：输入自然语言 + 点击提交（2个步骤）</li><li><strong>录入数据</strong>：输入自然语言 + 点击提交（2个步骤）</li><li><strong>语音输入</strong>：结合高准确率的语音输入法，进一步节省时间</li></ul><h3 id="虚拟环境概述" tabindex="-1"><a class="header-anchor" href="#虚拟环境概述"><span>虚拟环境概述</span></a></h3><h4 id="为什么需要虚拟环境" tabindex="-1"><a class="header-anchor" href="#为什么需要虚拟环境"><span>为什么需要虚拟环境</span></a></h4><ul><li><strong>依赖管理</strong>：不同项目使用不同库和版本，避免冲突</li><li><strong>版本控制</strong>：每个虚拟环境指定特定Python版本</li><li><strong>避免全局污染</strong>：避免全局环境中的依赖问题</li><li><strong>开发和生产一致性</strong>：确保不同环境的一致性</li><li><strong>安全性</strong>：限制对全局系统的更改</li></ul><h4 id="虚拟环境工具" tabindex="-1"><a class="header-anchor" href="#虚拟环境工具"><span>虚拟环境工具</span></a></h4><ul><li><strong>venv</strong>：Python标准库工具（3.3+版本提供）</li><li><strong>virtualenv</strong>：第三方工具，支持Python 2.x版本</li><li><strong>Conda</strong>：Anaconda的一部分，提供包管理和跨语言支持</li></ul><h3 id="miniconda-vs-anaconda" tabindex="-1"><a class="header-anchor" href="#miniconda-vs-anaconda"><span>Miniconda vs Anaconda</span></a></h3><ul><li><strong>Miniconda</strong>：精简版，只包含基本Conda和Python解释器</li><li><strong>Anaconda</strong>：完整版，预装了大量包和科学计算工具</li><li><strong>选择建议</strong>：推荐Miniconda，体积小、启动快、更灵活</li></ul><h2 id="📊-重要图表或公式" tabindex="-1"><a class="header-anchor" href="#📊-重要图表或公式"><span>📊 重要图表或公式</span></a></h2><h3 id="操作步骤对比" tabindex="-1"><a class="header-anchor" href="#操作步骤对比"><span>操作步骤对比</span></a></h3><ul><li><strong>查询数据</strong>：2+N+1 → 2个步骤</li><li><strong>录入数据</strong>：3+N+1 → 2个步骤</li><li><strong>效率提升</strong>：N越多，提升越明显</li></ul><h2 id="💡-关键收获" tabindex="-1"><a class="header-anchor" href="#💡-关键收获"><span>💡 关键收获</span></a></h2><ol><li><strong>RAG改造的可行性验证</strong>：通过实际案例证明RAG改造可以显著提升MIS系统效率</li><li><strong>渐进式改造策略</strong>：保留传统界面，降低改造风险，提供容错机制</li><li><strong>环境管理最佳实践</strong>：虚拟环境是Python开发中的最佳实践</li><li><strong>业务价值导向</strong>：必须让利益相关者看到明显收益才能推动改造项目</li></ol><h2 id="🤔-思考与疑问" tabindex="-1"><a class="header-anchor" href="#🤔-思考与疑问"><span>🤔 思考与疑问</span></a></h2><h3 id="rag应用成熟度管理" tabindex="-1"><a class="header-anchor" href="#rag应用成熟度管理"><span>RAG应用成熟度管理</span></a></h3><p>思考题：既然一个RAG应用无法一步到位，那么如何度过RAG应用不成熟的早期阶段？</p><ul><li><strong>答案</strong>：采用渐进式迭代方式，保留全部原始功能，保证业务正常使用，按优先级逐个模块升级</li></ul><h3 id="大模型的作用机制" tabindex="-1"><a class="header-anchor" href="#大模型的作用机制"><span>大模型的作用机制</span></a></h3><p>在实战中，大模型的作用本质上是：</p><ul><li><strong>自然语言理解</strong>：将用户输入的自然语言转换为程序可识别的结构化数据</li><li><strong>接口调用</strong>：调用原有的服务端接口执行具体操作</li><li><strong>结果封装</strong>：将大模型返回的结果进行适当处理后展示给用户</li><li><strong>上下文处理</strong>：用户提问的上下文算做外部知识，其他信息暂不处理</li></ul><h2 id="🔗-相关资料" tabindex="-1"><a class="header-anchor" href="#🔗-相关资料"><span>🔗 相关资料</span></a></h2><h3 id="安装和配置" tabindex="-1"><a class="header-anchor" href="#安装和配置"><span>安装和配置</span></a></h3><ul><li>Miniconda下载地址：https://mirrors.tuna.tsinghua.edu.cn/</li><li>推荐版本：Miniconda3-py39_23.5.2-0-Windows-x86_64.exe</li></ul><h3 id="虚拟环境管理" tabindex="-1"><a class="header-anchor" href="#虚拟环境管理"><span>虚拟环境管理</span></a></h3><ul><li>创建环境：<code>conda create -n rag1 python=3.9</code></li><li>激活环境：<code>conda activate rag1</code></li><li>安装依赖：<code>pip install -r requirements.txt</code></li></ul><h2 id="📝-个人总结" tabindex="-1"><a class="header-anchor" href="#📝-个人总结"><span>📝 个人总结</span></a></h2><h3 id="对传统软件开发者的启示" tabindex="-1"><a class="header-anchor" href="#对传统软件开发者的启示"><span>对传统软件开发者的启示</span></a></h3><p>RAG技术确实是传统软件开发人员加入AI浪潮的最佳路径，但需要正确的方法和策略：</p><ol><li><strong>从改造现有项目入手</strong>：成功率最高，风险最小</li><li><strong>展示实际价值</strong>：通过效率提升说服利益相关者</li><li><strong>渐进式改造</strong>：避免一刀切，保持业务连续性</li><li><strong>保留传统界面</strong>：作为容错机制</li></ol><h3 id="技术要点总结" tabindex="-1"><a class="header-anchor" href="#技术要点总结"><span>技术要点总结</span></a></h3><ul><li>虚拟环境管理是Python开发的必备技能</li><li>RAG改造的核心是自然语言到结构化数据的转换</li><li>门槛并不高，关键在于合适的切入点和方法论</li></ul><h3 id="实践建议" tabindex="-1"><a class="header-anchor" href="#实践建议"><span>实践建议</span></a></h3><ul><li>选择合适的改造项目和模块</li><li>优先改造用户使用频繁、步骤复杂的业务场景</li><li>保留原有功能作为容错机制</li><li>重视用户体验和效率提升的实际效果</li></ul><p>这篇文章为RAG系统的实际应用提供了很好的实践指导和路线图，特别适合有一定开发经验的传统软件开发人员快速入门AI应用开发。</p>',52)])])}]]),s=JSON.parse('{"path":"/posts/RAG%E7%B3%BB%E7%BB%9F%E5%AE%9E%E6%88%98%E8%AF%BE01.html","title":"01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高","lang":"zh-CN","frontmatter":{"title":"01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高","date":"2025-10-23T00:00:00.000Z","tags":["RAG","AI","检索增强生成","实战课程","MIS系统改造","Python环境配置"],"categories":["AI技术","读书笔记"],"description":"RAG系统实战课01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高 📖 文章来源: 极客时间 - RAG系统实战课 👨‍💻 作者: 叶伟民 📅 阅读时间: 2025-10-26 📋 文章概要 本文介绍了RAG系统作为传统软件开发人员加入AI浪潮的最快路径，并重点讲解了通过RAG改造传统MIS系统可以大幅提升用户工作效率。文章以实际的E...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-10-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-26T12:31:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LearnData\\",\\"url\\":\\"https://newzone.top\\"}]}"],["meta",{"property":"og:url","content":"https://newzone.top/posts/RAG%E7%B3%BB%E7%BB%9F%E5%AE%9E%E6%88%98%E8%AF%BE01.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高"}],["meta",{"property":"og:description","content":"RAG系统实战课01｜提效利器：RAG为传统MIS系统大幅提效，门槛并不高 📖 文章来源: 极客时间 - RAG系统实战课 👨‍💻 作者: 叶伟民 📅 阅读时间: 2025-10-26 📋 文章概要 本文介绍了RAG系统作为传统软件开发人员加入AI浪潮的最快路径，并重点讲解了通过RAG改造传统MIS系统可以大幅提升用户工作效率。文章以实际的E..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-26T12:31:16.000Z"}],["meta",{"property":"article:tag","content":"Python环境配置"}],["meta",{"property":"article:tag","content":"MIS系统改造"}],["meta",{"property":"article:tag","content":"实战课程"}],["meta",{"property":"article:tag","content":"检索增强生成"}],["meta",{"property":"article:tag","content":"AI"}],["meta",{"property":"article:tag","content":"RAG"}],["meta",{"property":"article:published_time","content":"2025-10-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T12:31:16.000Z"}]]},"git":{"createdTime":1760760774000,"updatedTime":1761481876000,"contributors":[{"name":"SDF001","username":"SDF001","email":"1026619596@qq.com","commits":3,"url":"https://github.com/SDF001"},{"name":"黄雷","username":"","email":"1026619596@qq.com","commits":1},{"name":"Claude","username":"Claude","email":"noreply@anthropic.com","commits":1,"url":"https://github.com/Claude"}]},"readingTime":{"minutes":5.25,"words":1576},"filePathRelative":"_posts/RAG系统实战课01.md","excerpt":"\\n<blockquote>\\n<p>📖 <strong>文章来源</strong>: <a href=\\"https://time.geekbang.org/column/article/806091\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">极客时间 - RAG系统实战课</a> 👨‍💻 <strong>作者</strong>: 叶伟民 📅\\n<strong>阅读时间</strong>: 2025-10-26</p>\\n</blockquote>\\n<h2>📋 文章概要</h2>\\n<p>本文介绍了RAG系统作为传统软件开发人员加入AI浪潮的最快路径，并重点讲解了通过RAG改造传统MIS系统可以大幅提升用户工作效率。文章以实际的ERP系统为例，展示了改造前后的对比，并提供了完整的环境搭建指南。</p>","autoDesc":true}')}}]);